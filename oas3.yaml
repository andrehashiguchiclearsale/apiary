openapi: 3.0.1
info:
  title: Decision API
  description: API of decision.
  version: v1
paths:
  /api/v1/CustomerEntities:
    post:
      tags:
        - CustomerEntities
      summary: Cria uma Entidade. (Criada - Sem alinhamento)
      description: "Precisa de alinhamento"
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Decision.Configuration.Application.CustomerEntities.Commands.Create.CreateCustomerEntityCommand
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Decision.Configuration.Application.CustomerEntities.Commands.Create.CreateCustomerEntityCommand
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Decision.Configuration.Application.CustomerEntities.Commands.Create.CreateCustomerEntityCommand
      responses:
        '201':
          description: Retorna o novo item criado
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decision.Configuration.Application.CustomerEntities.Commands.Create.CustomerEntityResponse
        '400':
          description: Se a entidade não foi criada por dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
        '500':
          description: Se a entidade não foi criado por erro no servidor
  /api/v1/Features:
    get:
      summary: Recupera todas as Feature utilizando Paginação e/ou filtros. (Em desenvolvimento)
      description: "Utilizar na listagem de Features"
      tags:
        - Features
      parameters:
        - name: PageNumber
          description: "Número da página desejada"
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          description: "Quantidade de páginas"
          in: query
          schema:
            type: integer
            format: int32
        - name: Search
          description: "Filtro por campo"
          in: query
          schema:
            type: string
        - name: InitialDate
          description: "Filtro por data inicial"
          in: query
          schema:
            type: string
            format: date-time
        - name: FinalDate
          description: "Filtro por data final"
          in: query
          schema:
            type: string
            format: date-time
        - name: SortAsc
          description: "Campo para ordenação ascendente."
          in: query
          schema:
            type: string            
        - name: SortDesc
          description: "Campo para ordenação descendente."
          in: query
          schema:
            type: string            
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decision.Configuration.Application.Commons.Pagination.PagedResponse`1[System.Collections.Generic.List`1[Decision.Configuration.Application.Feature.Commands.Create.FeatureListResponse]]
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
        '500':
          description: Server Error
    post:
      tags:
        - Features
      summary: Cria uma Feature.(Criada - Sem alinhamento)
      description: "Precisa de alinhamento"
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Decision.Configuration.Application.Features.Commands.Create.CreateFeatureCommand
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Decision.Configuration.Application.Features.Commands.Create.CreateFeatureCommand
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Decision.Configuration.Application.Features.Commands.Create.CreateFeatureCommand
      responses:
        '200':
          description: Success
        '201':
          description: Retorna o novo item criado
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decision.Configuration.Application.Features.Commands.Http400
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decision.Configuration.Application.Features.Commands.HttpErrorDefault
        '500':
          description: Internal Server Error  
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decision.Configuration.Application.Features.Commands.HttpErrorDefault
  /api/v1/Features/featureId:
    get:
      summary: Recupera os dados de uma feature. (Em desenvolvimento)
      description: "Retorna as informações completas de Feature (Sempre será utilizada a última versão)."
      tags:
        - Features
      parameters:
        - name: featureId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decision.Configuration.Application.Features.Commands.Base.GetFeatureCommand
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decision.Configuration.Application.Features.Commands.Http400
        '422':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decision.Configuration.Application.Features.Commands.HttpErrorDefault
        '500':
          description: Se o item não for criado  
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decision.Configuration.Application.Features.Commands.HttpErrorDefault
    put:
      tags:
        - Features
      parameters:
        - name: featureId
          in: path
          required: true
          schema:
            type: string
            format: uuid        
      summary: Atualiza uma Feature. (Em desenvolvimento)
      description: "Atualiza uma Feature."
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Decision.Configuration.Application.Features.Commands.Base.UpdateFeatureCommand
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/Decision.Configuration.Application.Features.Commands.Base.UpdateFeatureCommand
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decision.Configuration.Application.Features.Commands.Base.UpdateFeatureCommand    
      responses:
        '200':
          description: Success
        '201':
          description: Retorna o novo item criado
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decision.Configuration.Application.Features.Commands.Http400
        '422':
          description: Unprocessable Entity 
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decision.Configuration.Application.Features.Commands.HttpErrorDefault
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decision.Configuration.Application.Features.Commands.HttpErrorDefault
  /api/v1/Features/featureId/Preview:
    get:
      summary: Recupera a Pré-Visualização da feature.
      description: "Retorna as informações simplificadas (Sempre será utilizada a última versão) para visualização na listagem quando a Feature é selecionada."
      tags:
        - Features
      parameters:
        - name: featureId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decision.Configuration.Application.Features.Commands.Get.FeaturePreviewResponse
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
        '500':
          description: Server Error  
  /api/v1/Features/Lookup:   
    get:
      summary: Recupera a listagem de Features sem Paginação e filtros
      description: "Utilizar na listagem de combos/lookups"
      tags:
        - Features
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decision.Configuration.Application.Features.Commands.Get`1[System.Collections.Generic.List`1[Decision.Configuration.Application.Feature.Commands.Get.FeatureLookupResponse]]
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
        '500':
          description: Server Error    
  /api/v1/Features/featureId/Version/Lookup:   
    get:
      summary: Recupera a listagem de Versões da Feature sem Paginação e filtros
      description: "Utilizar na listagem de combos/lookups"
      parameters:
        - name: featureId
          in: path
          required: true
          description: "Identificador da Feature"
          schema:
            type: string
            format: uuid      
      tags:
        - CustomerEntities
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decision.Configuration.Application.Features.Commands.Get`1[System.Collections.Generic.List`1[Decision.Configuration.Application.Feature.Commands.Get.FeatureVersionLookupResponse]]
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
        '500':
          description: Server Error
  /api/v1/Features/Version/featureVersionId/Variable/Lookup:   
    get:
      summary: Recupera a listagem de Versões da Feature sem Paginação e filtros
      description: "Utilizar na listagem de combos/lookups"
      parameters:
        - name: featureVersionId
          in: path
          required: true
          description: "Identificador da Versão da Feature"
          schema:
            type: string
            format: uuid               
      tags:
        - Features
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decision.Configuration.Application.Features.Commands.Get`1[System.Collections.Generic.List`1[Decision.Configuration.Application.Feature.Commands.Get.FeatureVariableLookupResponse]]
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
        '500':
          description: Server Error
  /api/v1/Features/UpdateChain:   
    post:
      summary: Realiza a atualização em cascata da Feature (Em desenvolvimento)
      description: "Utilizar para atualizar os orquestratores que a Feature é utilizada"
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Decision.Configuration.Application.Features.Commands.UpdateChain
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Decision.Configuration.Application.Features.Commands.UpdateChain
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Decision.Configuration.Application.Features.Commands.UpdateChain              
      tags:
        - Features
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decision.Configuration.Application.Features.Commands.Get`1[System.Collections.Generic.List`1[Decision.Configuration.Application.Feature.Commands.Get.FeatureVariableLookupResponse]]
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
        '500':
          description: Server Error        
  /api/v1/Fields/Lookup:   
    get:
      summary: Recupera a listagem de Fields sem Paginação e filtros (Em desenvolvimento)
      description: "Utilizar na listagem de combos/lookups"
      tags:
        - Fields
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decision.Configuration.Application.Fields.Commands.Get`1[System.Collections.Generic.List`1[Decision.Configuration.Application.Fields.Commands.Get.FieldsLookupResponse]]
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
        '500':
          description: Server Error
  /api/v1/SqlConnections/Lookup:   
    get:
      summary: Recupera a listagem de Sql Connection sem Paginação e filtros
      description: "Utilizar na listagem de combos/lookups"
      tags:
        - CustomerEntities
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decision.Configuration.Application.SqlConnections.Commands.Get`1[System.Collections.Generic.List`1[Decision.Configuration.Application.SqlConnections.Commands.Get.SqlConnectionsLookupResponse]]
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
        '500':
          description: Server Error
  /api/v1/Orchestrator/featureId/Entities:   
    get:
      summary: Recupera a listagem de Orquestratores com suas entidades vinculadas filtradas por uma Feature (Em desenvolvimento).
      description: "Utilizar na atualização em cascata de Feature.por id"
      parameters:
        - name: featureVersionId
          in: path
          required: true
          description: "Identificador da Versão da Feature"
          schema:
            type: string
            format: uuid  
      tags:
        - Orchestrator
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decision.Configuration.Application.Orchestrator.Commands.GetOrchestratorWithEntities
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
        '500':
          description: Server Error         
  /api/v1/StatisticalModels:
    post:
      tags:
        - StatisticalModels
      summary: Cria um Modelo.(Criada - Sem alinhamento)
      description: "Precisa de alinhamento"
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Decision.Configuration.Application.StatisticalModels.Commands.Create.CreateStatisticalModelCommand
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Decision.Configuration.Application.StatisticalModels.Commands.Create.CreateStatisticalModelCommand
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Decision.Configuration.Application.StatisticalModels.Commands.Create.CreateStatisticalModelCommand
      responses:
        '200':
          description: Success
        '201':
          description: Retorna o novo item criado
        '400':
          description: Se o item não for criado
components:
  schemas:
    Decision.Configuration.Api.Contracts.Fields.Update.UpdateFieldRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        length:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    Decision.Configuration.API.Contracts.Tests.Unit.RunUnitTestRequest:
      required:
        - data
        - executionEnvironment
        - fieldMappingVersionId
        - subjectType
        - subjectVersionId
      type: object
      properties:
        subjectVersionId:
          type: string
          format: uuid
        subjectType:
          $ref: '#/components/schemas/Decision.Configuration.Domain.Tests.SubjectType'
        data: {}
        fieldMappingVersionId:
          type: string
          format: uuid
        executionEnvironment:
          type: integer
          format: int32
      additionalProperties: false
    Decision.Configuration.API.Models.BatchTests.FinishBatchTestRequest:
      type: object
      properties:
        testId:
          type: string
          format: uuid
      additionalProperties: false
    Decision.Configuration.API.Models.BatchTests.StartBatchTestRequest:
      type: object
      properties:
        subjectType:
          $ref: '#/components/schemas/Decision.Configuration.Domain.Tests.SubjectType'
        subjectVersionId:
          type: string
          format: uuid
        fieldMappingVersionId:
          type: string
          format: uuid
        entityId:
          type: integer
          format: int32
        batchSize:
          type: integer
          format: int32
        executionEnvironment:
          type: integer
          format: int32
      additionalProperties: false
    Decision.Configuration.Application.CustomerEntities.Commands.Create.CreateCustomerEntityCommand:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: false
        name:
          type: string
          nullable: false
      additionalProperties: false
    Decision.Configuration.Application.CustomerEntities.Commands.Create.CustomerEntityResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    Decision.Configuration.Application.Commons.Pagination.PagedResponse`1[System.Collections.Generic.List`1[Decision.Configuration.Application.Feature.Commands.Create.FeatureListResponse]]:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        totalRecords:
          type: integer
          format: int32
        data:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/Decision.Configuration.Application.Features.Commands.Get.FeatureListResponse'
          nullable: true
      additionalProperties: false
    Decision.Configuration.Application.Features.Commands.Get.FeatureListResponse:
      type: object
      properties:
        id:
          type: string
          description: "Identificador da Feature"
          format: uuid      
        name:
          type: string
          description: "Nome da Feature"
          nullable: true
        version:
          description: "Versão da Feature utilizando o padrão [SemVer](https://semver.org/)"
          type: string
          nullable: true            
        sqlConnection:
          description: "Nome da conexão SQL"
          type: string
          nullable: true
        lastUpdateUserId:
          type: string
          description: "Usuário que realizou a última atualição"
          nullable: true
        lastUpdatedDateUtc:
          type: string
          description: "Data da ultima atualização"
          nullable: true
      additionalProperties: false     
    Decision.Configuration.Application.Features.Commands.Get.FeaturePreviewResponse:
      type: object
      properties:
        id:
          type: string
          description: "Identificador da Feature"
          format: uuid       
        name:
          type: string
          description: "Nome da Feature"
          nullable: true
        description:
          type: string
          description: "Descrição da Feature"
          nullable: true 
        version:
          Adicdescription: "Versão da Feature utilizando o padrão [SemVer](https://semver.org/)"
          type: string
          description: "Nome da Feature"
          nullable: true          
        sqlConnection:
          description: "Nome da conexão SQL"
          type: string
          nullable: true
        lastUpdateUserId:
          type: string
          description: "Usuário que realizou a última atualição"
          nullable: true
        lastUpdatedDateUtc:
          type: string
          description: "Data da ultima atualização"
          nullable: true
      additionalProperties: false
    Decision.Configuration.Application.Features.Commands.Get.FeatureLookupResponse:
      type: object
      properties:
        id:
          type: string
          description: "Identificador da Feature"
          format: uuid
        name:
          type: string
          description: "Nome da Feature"
        description:
          type: string
          description: "Descrição da Feature"
      additionalProperties: false  
    Decision.Configuration.Application.Features.Commands.Get`1[System.Collections.Generic.List`1[Decision.Configuration.Application.Feature.Commands.Get.FeatureLookupResponse]]:
      type: array
      items:
        $ref: '#/components/schemas/Decision.Configuration.Application.Features.Commands.Get.FeatureLookupResponse'
      nullable: true
      additionalProperties: false
    Decision.Configuration.Application.Features.Commands.Get.FeatureVersionLookupResponse:
      type: object
      properties:
        id:
          type: string
          description: "Identificador da FeatureVersion"
          format: uuid 
        version:
          type: string
          description: "Versão da Feature utilizando o padrão [SemVer](https://semver.org/)"
          nullable: true
      additionalProperties: false  
    Decision.Configuration.Application.Features.Commands.Get`1[System.Collections.Generic.List`1[Decision.Configuration.Application.Feature.Commands.Get.FeatureVersionLookupResponse]]:
      type: array
      items:
        $ref: '#/components/schemas/Decision.Configuration.Application.Features.Commands.Get.FeatureVersionLookupResponse'
      nullable: true
      additionalProperties: false
    Decision.Configuration.Application.Features.Commands.Get.FeatureVariableLookupResponse:
      type: object
      properties:
        id:
          type: string
          description: "Identificador da Feature Variable"
          format: uuid
        name:
          type: string
          description: "Nome da Feature Variable"
          nullable: true
      additionalProperties: false  
    Decision.Configuration.Application.Features.Commands.Get`1[System.Collections.Generic.List`1[Decision.Configuration.Application.Feature.Commands.Get.FeatureVariableLookupResponse]]:
      type: array
      items:
        $ref: '#/components/schemas/Decision.Configuration.Application.Features.Commands.Get.FeatureVariableLookupResponse'
      nullable: true
      additionalProperties: false 
    Decision.Configuration.Application.Fields.Commands.Get.FieldsLookupResponse:
      type: object
      properties:
        id:
          type: string
          description: "Identificador do Field"
          format: uuid 
        name:
          type: string
          description: "Nome do Field"
        description:
          type: string
          description: "Descrição do Field"          
      additionalProperties: false  
    Decision.Configuration.Application.Fields.Commands.Get`1[System.Collections.Generic.List`1[Decision.Configuration.Application.Fields.Commands.Get.FieldsLookupResponse]]:
      type: array
      items:
        $ref: '#/components/schemas/Decision.Configuration.Application.Fields.Commands.Get.FieldsLookupResponse'
      nullable: true
      additionalProperties: false    
    Decision.Configuration.Application.SqlConnections.Commands.Get.SqlConnectionsLookupResponse:
      type: object
      properties:
        id:
          type: string
          description: "Identificador do SqlConnection"
          format: uuid
        name:
          type: string
          description: "Nome do SqlConnection"
      additionalProperties: false  
    Decision.Configuration.Application.SqlConnections.Commands.Get`1[System.Collections.Generic.List`1[Decision.Configuration.Application.SqlConnections.Commands.Get.SqlConnectionsLookupResponse]]:
      type: array
      items:
        $ref: '#/components/schemas/Decision.Configuration.Application.SqlConnections.Commands.Get.SqlConnectionsLookupResponse'
      nullable: true
      additionalProperties: false
    Decision.Configuration.Application.Orchestrator.Commands.GetOrchestratorWithEntities:
      type: object
      properties:
        id:
          type: string
          description: "Identificador do Orquestrator"
          format: uuid
        name:
          type: string
          description: "Nome do Orquestrator"
          nullable: true
        Entities:
          type: array
          items:
            $ref: >-
              #/components/schemas/Decision.Configuration.Application.Entities.Commands.GetOrchestratorWithEntities
          nullable: true
    Decision.Configuration.Application.Entities.Commands.GetOrchestratorWithEntities: 
      type: object
      properties:
        EntityId:
          type: string
          description: "Identificador da Entidade"
          format: uuid
        name:
          type: string
          description: "Nome da Entidade"
          nullable: true
    Decision.Configuration.Application.Features.Commands.HttpErrorDefault:
      type: object
      properties:
          statusCode:
            type: string
            nullable: true
            description: "Http Code referente ao erro"
          Message:
            type: string
            nullable: true
            description: "Mensagem referente aos erros"
          Errors:
            type: string
            nullable: true
            description: "Indica os erros"
    Decision.Configuration.Application.Features.Commands.Http400:
      type: object
      properties:
          type:
            type: string
            nullable: true
            description: "Tipo do erro"
          title:
            type: string
            nullable: true
            description: "Título do erro"
          status:
            type: string
            nullable: true
            description: "Código Http do Erro"
          traceId:
            type: string
            nullable: true
            description: "TraceId do erro" 
          errors:
            type: array
            nullable: true
            type: array
            items:
              $ref: >-
                #/components/schemas/Decision.Configuration.Application.Features.Commands.ErrosArray
            description: "Array com a descrição dos erros"    
    Decision.Configuration.Application.Features.Commands.ErrosArray:
      type: object
      properties:
        Description:
          type: string
          nullable: true
          description: "Descrição do Erro"            
    Decision.Configuration.Application.Features.Commands.Create.CreateFeatureCommand:
      type: object
      properties:
        name:
          type: string
          nullable: true
          description: "Nome da Feature"
        creationUserId:
          type: string
          nullable: true
          description: "Usuário que criou a Feature"
        caosName:
          type: string
          nullable: true
          description: "Nome do Caos da Feature"
        tags:
          type: string
          nullable: true
          description: "Tags da Feature"
        description:
          type: string
          nullable: true
          description: "Descrição da Feature"
        sqlConnectionId:
          type: string
          format: uuid
          description: "Id da conexão Sql da Feature"
        dependencies:
          type: array
          items:
            $ref: >-
              #/components/schemas/Decision.Configuration.Application.Features.Commands.Create.CreateFeatureDependencyCommand
          nullable: true
        sqlCode:
          type: string
          nullable: true
          description: "Código Sql da Feature"
        schemaName:
          type: string
          nullable: true
          description: "Schema da Feature"
        timeout:
          type: integer
          format: int32
          nullable: true
          description: "Timeout da Feature"
        userInformation:
          $ref: >-
            #/components/schemas/Decision.Configuration.Application.Users.UserInformation
      additionalProperties: false
    Decision.Configuration.Application.Features.Commands.Base.UpdateFeatureCommand:
      type: object
      properties:
        id:
          type: string
          nullable: false
          format: uuid
          description: "Id da Feature"
        key:
          type: string
          nullable: true
          description: "Key da Feature"
        name:
          type: string
          nullable: true
          description: "Nome da Feature"
        description:
          type: string
          nullable: true
          description: "Descrição da Feature"
        caosName:
          type: string
          nullable: true
          description: "Caos da Feature"
        tags:
          type: string
          nullable: true
          description: "Tags da Feature"
        creationUserId:
          type: string
          nullable: true
          description: "Usuário de criação da Feature"
        lastUpdateUserId:
          type: string
          nullable: true
          description: "Último usuário a atualizar a Feature"
        CreatedDateUtc:
          type: string
          format: date-time
          description: "Data de criação da Feature"
        LastUpdatedDateUtc:
          type: string
          format: date-time
          description: "Data da última edição da Feature"
        sqlCode:
          type: string
          description: "Código Sql da Feature"
        sqlConnectionId:
          type: string
          format: uuid
          description: "Código da conexão Sql da Feature"
        sqlConnectionName:
          type: string
          description: "Nome da conexão Sql da Feature"
        deprecated:
          type: boolean
          description: "Indica se a Feature está depreciada"
        status:
          type: string
          description: "Indica se a Feature está em Rascunho ou Efetivada"
        version:
          type: string
          description: "Versão da Feature"
        dependencies:
          type: array
          items:
            $ref: >-
              #/components/schemas/Decision.Configuration.Application.Features.Commands.Create.UpdateFeatureDependencyCommand
          nullable: true
        schemaName:
          type: string
          nullable: true
          description: "Schema da Feature"
        userInformation:
          $ref: >-
            #/components/schemas/Decision.Configuration.Application.Users.UserInformation
        timeout:
          type: integer
          format: int32
          nullable: true
          description: "Timeout da Feature"
      additionalProperties: false
    Decision.Configuration.Application.Features.Commands.Base.GetFeatureCommand:
      type: object
      properties:
        id:
          type: string
          nullable: false
          format: uuid
          description: "Id da Feature"
        versionId:
          type: string
          nullable: false
          format: uuid
          description: "Id da Versão da Feature"
        key:
          type: string
          nullable: true  
          description: "Key da Feature"
        name:
          type: string
          nullable: true
          description: "Nome da Feature"
        description:
          type: string
          nullable: true  
          description: "Descrição da Feature"
        caosName:
          type: string
          nullable: true
          description: "Caos da Feature"
        tags:
          type: string
          nullable: true
          description: "Tags da Feature"
        creationUserId:
          type: string
          nullable: true
          description: "Usuário de criação da Feature"
        lastUpdateUserId:
          type: string
          nullable: true
          description: "Último usuário a editar a Feature"
        CreatedDateUtc:
          type: string
          format: date-time
          description: "Data de criação da Feature"
        LastUpdatedDateUtc:
          type: string
          format: date-time
          description: "Data da última edição da Feature"
        sqlCode:
          type: string  
          description: "Código Sql da Feature"
        sqlConnectionId:
          type: string
          format: uuid
          description: "Id da conexão Sql Feature"
        sqlConnectionName:
          type: string
          description: "Nome da conexão Sql da Feature"
        deprecated:
          type: boolean 
          description: "Indica que a Feature está depreciada"
        status:
          type: string
          description: "Indica se a Feature está em Rascunho ou Efetivada"
        version:
          type: string
          description: "Versão da Feature"
        dependencies:
          type: array
          items:
            $ref: >-
              #/components/schemas/Decision.Configuration.Application.Features.Commands.Create.GetFeatureDependencyCommand
          nullable: true
        schemaName:
          type: string
          nullable: true
          description: "Schema da Feature"
        timeout:
          type: integer
          format: int32
          nullable: true
          description: "Timeout da Feature"
      additionalProperties: false  
    Decision.Configuration.Application.Features.Commands.Create.GetFeatureDependencyCommand:
      type: object
      properties:
        source:
          $ref: >-
            #/components/schemas/Decision.Configuration.Application.Features.GetDependencyType
        outputId:
          type: string
          format: uuid
          description: "Id da dependência"
        alias:
          type: string
          nullable: true
          description: "Alias da dependência"
        name:
          type: string
          nullable: true
          description: "Nome da dependência"
        version:
          type: string
          nullable: true
          description: "versão da dependência"
        type: 
          type: string
          nullable: true
          description: "Tipo do dado da dependência (String, Int32, Boolean, Double, DateTime)"
        description: 
          type: string
          nullable: true
          description: "Descrição da Dependência"
        tags: 
          type: string
          nullable: true
          description: "Tags da Dependência (somente Feature)"
        variable: 
          type: string
          nullable: true
          description: "Variavel da Dependência (somente Feature)"    
      additionalProperties: false
    Decision.Configuration.Application.Features.GetDependencyType:
      enum: [0, 1]
      type: integer
      format: int32
      description: "0 - Field | 1 - Feature"  
    Decision.Configuration.Application.Features.Commands.Create.UpdateFeatureDependencyCommand:
      type: object
      properties:
        source:
          $ref: >-
            #/components/schemas/Decision.Configuration.Application.Features.UpdateDependencyType
        outputId:
          type: string
          format: uuid
          description: "Id da dependência (no caso de Feature é o Id obtido a partir do lookup de /api/v1/Features/Version/featureVersionId/Variable/Lookup)"
        alias:
          type: string
          nullable: true
          description: "Alias da dependência"
    Decision.Configuration.Application.Features.UpdateDependencyType:
      enum: [0, 1]
      type: integer
      format: int32
      description: "0 - Field | 1 - Feature"
    Decision.Configuration.Application.Features.Commands.Create.CreateFeatureDependencyCommand:
      type: object
      properties:
        source:
          $ref: >-
            #/components/schemas/Decision.Configuration.Application.Features.DependencyType
        outputId:
          type: string
          format: uuid
          description: "Id da dependência (no caso de Feature é o Id obtido a partir do lookup de /api/v1/Features/Version/featureVersionId/Variable/Lookup)"
        alias:
          type: string
          nullable: true
          description: "Alias da dependência"
      additionalProperties: false
    Decision.Configuration.Application.Features.DependencyType:
      enum:
        - 0
        - 1
      description: "0 - Field | 1 - Feature"
      type: integer
      format: int32
    Decision.Configuration.Application.Features.Commands.UpdateChain: 
      type: object
      properties:
        featureId:
          type: string
          nullable: true
        featureVersionId:
          type: string
          nullable: true
        Orchestrators:
          type: array
          items:
            $ref: >-
              #/components/schemas/Decision.Configuration.Application.Orchestrator.Commands.UpdateChainOrchestrator
          nullable: true
    Decision.Configuration.Application.Orchestrator.Commands.UpdateChainOrchestrator:
      type: object
      properties:
        OrchestratorId:
          type: string
          nullable: true
    Decision.Configuration.Application.StatisticalModels.Commands.Create.CreateStatisticalModelCommand:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        tags:
          type: string
          nullable: true
        dependencies:
          type: array
          items:
            $ref: >-
              #/components/schemas/Decision.Configuration.Application.StatisticalModels.Commands.Create.CreateStatisticalModelDependencyCommand
          nullable: true
        endpoint:
          type: string
          nullable: true
        secondaryendpoint:
          type: string
          nullable: true
        primaryauthenticationkey:
          type: string
          nullable: true
        secondaryauthenticationkey:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
      additionalProperties: false
    Decision.Configuration.Application.StatisticalModels.Commands.Create.CreateStatisticalModelDependencyCommand:
      type: object
      properties:
        source:
          $ref: >-
            #/components/schemas/Decision.Configuration.Application.StatisticalModels.DependencyType
        outputId:
          type: string
          format: uuid
        alias:
          type: string
          nullable: true
      additionalProperties: false
    Decision.Configuration.Application.StatisticalModels.DependencyType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    Decision.Configuration.Application.Users.UserInformation:
      type: object
      properties:
        id:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
    Decision.Configuration.Domain.Tests.SubjectType:
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
      type: integer
      format: int32
    Microsoft.AspNetCore.Mvc.ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
  securitySchemes:
    Bearer:
      type: http
      description: 'JWT Authorization, example: ''12345abcdef'''
      scheme: Bearer
security:
  - Bearer: []