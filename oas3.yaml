swagger: '2.0'
info:
  title: Decision API
  description: API of decision.
  version: v1
host: 'localhost:5001'
basePath: /
schemes:
  - https
paths:
  /BatchTests/Start:
    post:
      tags:
        - BatchTests
      consumes:
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: >-
              #/definitions/Decision.Configuration.API.Models.BatchTests.StartBatchTestRequest
      responses:
        '200':
          description: Success
  /BatchTests/Finish:
    post:
      tags:
        - BatchTests
      consumes:
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: >-
              #/definitions/Decision.Configuration.API.Models.BatchTests.FinishBatchTestRequest
      responses:
        '200':
          description: Success
  /api/v1/CustomerEntities:
    post:
      tags:
        - CustomerEntities
      summary: Cria uma Entidade.
      description: "Exemplo:\r\n            \r\n    POST /api/v1/CustomerEntities\r\n    {\r\n       \"id\": 1,\r\n       \"name\": \"Item1\"\r\n    }"
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            $ref: >-
              #/definitions/Decision.Configuration.Application.CustomerEntities.Commands.Create.CreateCustomerEntityCommand
      responses:
        '201':
          description: Retorna o novo item criado
          schema:
            $ref: >-
              #/definitions/Decision.Configuration.Application.CustomerEntities.Commands.Create.CustomerEntityResponse
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.Http400'  
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
        '500':
          description: Internal Server Error  
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
    get:
      tags:
        - CustomerEntities
      summary: Paginação de Entidades.  
      produces:
        - application/json
      parameters:
        - in: query
          name: PageNumber
          type: integer
          format: int32
        - in: query
          name: PageSize
          type: integer
          format: int32
        - in: query
          name: Search
          type: string
        - in: query
          name: InitialDate
          type: string
          format: date-time
        - in: query
          name: FinalDate
          type: string
          format: date-time
        - in: query
          name: SortAsc
          type: string
        - in: query
          name: SortDesc
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: >-
              #/definitions/Decision.Configuration.Application.Commons.Pagination.PagedResponse`1[System.Collections.Generic.List`1[Decision.Configuration.Application.CustomerEntities.Commands.Create.CustomerEntityResponse]]
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.Http400'  
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
        '500':
          description: Internal Server Error  
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
  '/Deployments/{environmentExecutionId}/{deploymentId}/Deploy':
    post:
      tags:
        - Deployments
      parameters:
        - in: path
          name: environmentExecutionId
          required: true
          type: integer
          format: int32
        - in: path
          name: deploymentId
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Success
  /api/v1/Features:
    post:
      tags:
        - Features
      summary: Cria uma Feature.
      description: "Exemplo:\r\n            \r\n    POST \r\n    {\r\n        \"name\": \"feature1\",\r\n        \"caosName\": \"caos\",\r\n        \"tags\": \"tag1\",\r\n        \"description\": \"descrição 123\",\r\n        \"sqlConnectionId\": \"42674338-5DED-424A-B60C-60DB9715C2D7\",\r\n        \"dependencies\": [\r\n         {\r\n           \"Source\": 1,\r\n           \"OutputId\": \"0E78C654-2DCB-4528-B9FC-C2DBB85A2202\",\r\n           \"Alias\": \"variavel1\",\r\n           \"Output\": \"var2\",\r\n           \"Resource\": \"variavel1\",\r\n           \"Version\": \"0.0.2\",\r\n           \"Type\": \"integer\"\r\n         },\r\n         {\r\n           \"Source\": 1,\r\n           \"OutputId\": \"C04E5FD2-03D7-4E42-A6FB-E9CC63C31BC1\",\r\n           \"Alias\": \"variavel2\",\r\n           \"Output\": \"var2\",\r\n           \"Resource\": \"testvar1\",\r\n           \"Version\": \"0.0.8\",\r\n           \"Type\": \"integer\"\r\n         },\r\n         {\r\n            \"Source\": 0,\r\n               \"OutputId\": \"824F279C-3DA5-4FC8-95C6-B20C4C6092DA\",\r\n               \"Alias\": \"pedido_telefone_nro\",\r\n               \"Resource\": \"pedido_telefone_nro\",\r\n               \"Type\": \"integer\"\r\n           },\r\n           {\r\n               \"Source\": 0,\r\n               \"OutputId\": \"13A857F8-5934-4C20-AE67-C30158CA992E\",\r\n               \"Alias\": \"uf\",\r\n               \"Resource\": \"uf\",\r\n               \"Type\": \"integer\"\r\n           }\r\n        ],\r\n       \"sqlCode\": \"declare @var1 int   select @var1, @variavel1, @variavel2, @uf, @pedido_telefone_nro\",\r\n        \"schemaName\": \"dbo\",\r\n        \"timeout\": 30,\r\n        \"userInformation\": {\r\n            \"id\": \"user.id\",\r\n            \"email\": \"userid@userid.com\"\r\n        }\r\n    }"
      consumes:
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            $ref: >-
              #/definitions/Decision.Configuration.Application.Features.Commands.Create.CreateFeatureCommand
      responses:
        '200':
          description: Success
        '201':
          description: Retorna o novo item criado
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.Http400'  
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
        '500':
          description: Internal Server Error  
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
  /api/v1/Features/{featureId}:
    get:
      tags:
        - Features
      summary: Retorna os dados completos de Feature
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: featureId
          description: ''
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Retorna os dados completos de Feature
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Queries.GetbyId.GetByIdFeatureQueryResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.Http400'  
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
        '500':
          description: Internal Server Error  
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
    put:
      tags:
        - Features
      summary: Atualiza uma Feature.
      description: "Exemplo:\r\n            \r\n    PUT \r\n    {\r\n        \"id\":\"42674338-5DED-424A-B60C-60DB9715C2D8\" \r\n        \"name\": \"feature1\",\r\n        \"caosName\": \"caos\",\r\n        \"tags\": \"tag1\",\r\n        \"description\": \"descrição 123\",\r\n        \"sqlConnectionId\": \"42674338-5DED-424A-B60C-60DB9715C2D7\",\r\n        \"dependencies\": [\r\n         {\r\n           \"Source\": 1,\r\n           \"OutputId\": \"0E78C654-2DCB-4528-B9FC-C2DBB85A2202\",\r\n           \"Alias\": \"variavel1\"\r\n         },\r\n         {\r\n           \"Source\": 1,\r\n           \"OutputId\": \"C04E5FD2-03D7-4E42-A6FB-E9CC63C31BC1\",\r\n           \"Alias\": \"variavel2\"\r\n         },\r\n         {\r\n            \"Source\": 0,\r\n               \"OutputId\": \"824F279C-3DA5-4FC8-95C6-B20C4C6092DA\",\r\n               \"Alias\": \"pedido_telefone_nro\",\r\n               \"Resource\": \"pedido_telefone_nro\"\r\n           },\r\n           {\r\n               \"Source\": 0,\r\n               \"OutputId\": \"13A857F8-5934-4C20-AE67-C30158CA992E\",\r\n               \"Alias\": \"uf\"\r\n           }\r\n        ],\r\n       \"sqlCode\": \"declare @var1 int   select @var1, @variavel1, @variavel2, @uf, @pedido_telefone_nro\",\r\n        \"schemaName\": \"dbo\",\r\n        \"timeout\": 30,\r\n        \"userInformation\": {\r\n            \"id\": \"user.id\",\r\n            \"email\": \"userid@userid.com\"\r\n        }\r\n    }"
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
      parameters:
        - in: path
          name: featureId
          description: ''
          required: true
          type: string
          format: uuid
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.Update.UpdateFeatureCommand'
      responses:
        '200':
          description: Retorna a Feature atualizada
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Queries.GetbyId.GetByIdFeatureQueryResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.Http400'  
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
        '500':
          description: Internal Server Error  
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'       
  '/api/v1/Features/{featureId}/Preview':
    get:
      tags:
        - Features
      summary: Retorna os dados resumidos de Feature
      produces:
        - text/plain
        - application/json
      parameters:
        - in: path
          name: featureId
          description: ''
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Retorna os dados resumidos de Feature
          schema:
            $ref: >-
              #/definitions/Decision.Configuration.Application.Features.Queries.GetFeaturePreviewById.GetFeaturePreviewByIdQueryResponse
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.Http400'  
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
        '500':
          description: Internal Server Error  
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
  /api/v1/Features/Lookup:
    get:
      tags:
        - Features
      summary: Utilizar na listagem de combos/lookups de feature
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: Retorna os dados resumidos de Feature
          schema:
            $ref: >-
              #/definitions/Decision.Configuration.Application.Features.Queries.GetFeaturesLookup.GetFeaturesLookupQueryResponse
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.Http400'  
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
        '500':
          description: Internal Server Error  
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
  '/api/v1/Features/{featureId}/Version/Lookup':
    get:
      tags:
        - Features
      summary: Utilizar na listagem de combos/lookups de feature version
      produces:
        - text/plain
        - application/json
      parameters:
        - in: path
          name: featureId
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Retorna os dados referente a versão de Features resumidos.
          schema:
            $ref: >-
              #/definitions/Decision.Configuration.Application.Features.Queries.GetFeatureVersionLookupByFeature.GetFeatureVersionLookupByFeatureQueryResponse
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.Http400'  
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
        '500':
          description: Internal Server Error  
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
  '/api/v1/Features/Version/{featureVersionId}/Variable/Lookup':
    get:
      tags:
        - Features
      summary: Utilizar na listagem de combos/lookups de feature variable
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: featureVersionId
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Retorna os dados referentes as variavéis de uma versão de feature
          schema:
            $ref: >-
              #/definitions/Decision.Configuration.Application.Features.Queries.GetFeatureVersionVariableByFeatureId.GetFeatureVersionVariableLookupByFeatureVersionQueryResponse
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.Http400'  
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
        '500':
          description: Internal Server Error  
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
  '/api/v1/Features/UpdateChain':   
    post:
      tags:
        - Features
      summary: Realiza a atualização em cascata da Feature (Em desenvolvimento)
      description: "Utilizar para atualizar os orquestratores que a Feature é utilizada"
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            $ref: >-
              #/definitions/Decision.Configuration.Application.Features.Commands.UpdateChain
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.Http400'  
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
        '500':
          description: Internal Server Error  
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault' 
  /api/v1/Fields/Lookup:
    get:
      tags:
        - Fields
      summary: Recupera a listagem de Fields sem Paginação e filtros (Em desenvolvimento)
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: Utilizar na listagem de combos/lookups
          schema:
            $ref: >-
              #/definitions/Decision.Configuration.Application.Fields.Queries.GetFieldsLookup.FieldsLookupResponse
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.Http400'  
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
        '500':
          description: Internal Server Error  
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'          
  '/Fields/{id}':
    patch:
      tags:
        - Fields
      consumes:
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          format: uuid
        - in: body
          name: body
          schema:
            $ref: >-
              #/definitions/Decision.Configuration.Api.Contracts.Fields.Update.UpdateFieldRequest
      responses:
        '200':
          description: Success
  /api/v1/SqlConnections/Lookup:
    get:
      tags:
        - SqlConnections
      summary: Utilizar na listagem de combos/lookups de sqlConnection
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: Retorna os dados de sqlConnection
          schema:
            $ref: >-
              #/definitions/Decision.Configuration.Application.Sql.Queries.GetSqlConnectionLookup.GetSqlConnectionLookupQueryResponse
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.Http400'  
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
        '500':
          description: Internal Server Error  
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
  /api/v1/Orchestrator/{featureVersionId}/Entities:
    get:
      tags:
        - Orchestrator
      summary: Recupera a listagem de Orquestratores com suas entidades vinculadas filtradas por uma Feature (Em desenvolvimento).
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: featureVersionId
          description: "Identificador da Versão da Feature"
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Retorna os dados de Entidades vinculadas ao Orquestrator
          schema:
            $ref: >-
              #/definitions/Decision.Configuration.Application.Orchestrator.Commands.GetOrchestratorWithEntities
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.Http400'  
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
        '500':
          description: Internal Server Error  
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'          
  /api/v1/StatisticalModels:
    post:
      tags:
        - StatisticalModels
      summary: Cria um Modelo.
      description: "Exemplo:\r\n            \r\n    POST /api/v1/StatisticalModels\r\n    {\r\n        \"name\":\"nomemodelo\",\r\n        \"tags\":\"nomedatag\",\r\n        \"description\": \"descriptionModel\",\r\n        \"dependencies\":[\r\n        {\r\n            \"source\":1,\r\n            \"outputId\":\"BAE76C28-C808-4F5A-B2B9-7202A3713EDE\",\r\n            \"alias\":\"aliasdependencia\"\r\n        }\r\n        ],\r\n        \"endpoint\":\"urlendpoint1\",\r\n        \"secondaryEndpoint\":\"urlendpoint2\",\r\n        \"primaryAuthenticationKey\":\"primaryAuthenticationKey\",\r\n        \"secondaryAuthenticationKey\":\"secondaryAuthenticationKey\",\r\n        \"UserId\":\"user.id\"\r\n    }"
      consumes:
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            $ref: >-
              #/definitions/Decision.Configuration.Application.StatisticalModels.Commands.Create.CreateStatisticalModelCommand
      responses:
        '200':
          description: Success
        '201':
          description: Retorna o novo item criado
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.Http400'  
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
        '500':
          description: Internal Server Error  
          schema:
            $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.HttpErrorDefault'
  /Tests:
    get:
      tags:
        - Tests
      responses:
        '200':
          description: Success
  '/Tests/{testId}/Results/File':
    get:
      tags:
        - Tests
      parameters:
        - in: path
          name: testId
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Success
  /Tests/Execution-Environments:
    get:
      tags:
        - Tests
      responses:
        '200':
          description: Success
  '/TransactionData/{analysisId}':
    get:
      tags:
        - UnitTests
      parameters:
        - in: path
          name: analysisId
          required: true
          type: string
          format: uuid
        - in: query
          name: entityId
          type: integer
          format: int32
        - in: query
          name: executionEnvironmentId
          type: integer
          format: int32
      responses:
        '200':
          description: Success
  /UnitTests/Run:
    post:
      tags:
        - UnitTests
      consumes:
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: >-
              #/definitions/Decision.Configuration.API.Contracts.Tests.Unit.RunUnitTestRequest
      responses:
        '200':
          description: Success
definitions:
  Decision.Configuration.Api.Contracts.Fields.Update.UpdateFieldRequest:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      length:
        format: int32
        type: integer
  Decision.Configuration.API.Contracts.Tests.Unit.RunUnitTestRequest:
    required:
      - data
      - executionEnvironment
      - fieldMappingVersionId
      - subjectType
      - subjectVersionId
    type: object
    properties:
      subjectVersionId:
        format: uuid
        type: string
      subjectType:
        $ref: '#/definitions/Decision.Configuration.Domain.Tests.SubjectType'
      data: {}
      fieldMappingVersionId:
        format: uuid
        type: string
      executionEnvironment:
        format: int32
        type: integer
  Decision.Configuration.Application.Features.Commands.UpdateChain: 
      type: object
      properties:
        featureId:
          type: string
        featureVersionId:
          type: string
        Orchestrators:
          type: array
          items:
            $ref: '#/definitions/Decision.Configuration.Application.Orchestrator.Commands.UpdateChainOrchestrator'
  Decision.Configuration.Application.Orchestrator.Commands.UpdateChainOrchestrator:
      type: object
      properties:
        OrchestratorId:
          type: string
  Decision.Configuration.Application.Features.Commands.HttpErrorDefault:
      type: object
      properties:
          statusCode:
            type: string
            description: "Http Code referente ao erro"
          Message:
            type: string
            description: "Mensagem referente aos erros"
          Errors:
            type: string
            description: "Indica os erros"
  Decision.Configuration.Application.Features.Commands.Http400:
      type: object
      properties:
          type:
            type: string
            description: "Tipo do erro"
          title:
            type: string
            description: "Título do erro"
          status:
            type: string
            description: "Código Http do Erro"
          traceId:
            type: string
            description: "TraceId do erro" 
          errors:
            type: array
            items:
              $ref: '#/definitions/Decision.Configuration.Application.Features.Commands.ErrosArray'
            description: "Array com a descrição dos erros"    
  Decision.Configuration.Application.Features.Commands.ErrosArray:
      type: object
      properties:
        Description:
          type: string
          description: "Descrição do Erro"        
  Decision.Configuration.API.Models.BatchTests.FinishBatchTestRequest:
    type: object
    properties:
      testId:
        format: uuid
        type: string
  Decision.Configuration.API.Models.BatchTests.StartBatchTestRequest:
    type: object
    properties:
      subjectType:
        $ref: '#/definitions/Decision.Configuration.Domain.Tests.SubjectType'
      subjectVersionId:
        format: uuid
        type: string
      fieldMappingVersionId:
        format: uuid
        type: string
      entityId:
        format: int32
        type: integer
      batchSize:
        format: int32
        type: integer
      executionEnvironment:
        format: int32
        type: integer
  'Decision.Configuration.Application.Commons.Pagination.PagedResponse`1[System.Collections.Generic.List`1[Decision.Configuration.Application.CustomerEntities.Commands.Create.CustomerEntityResponse]]':
    type: object
    properties:
      pageNumber:
        format: int32
        type: integer
      pageSize:
        format: int32
        type: integer
      totalPages:
        format: int32
        type: integer
      totalRecords:
        format: int32
        type: integer
      data:
        type: array
        items:
          type: array
          items:
            $ref: >-
              #/definitions/Decision.Configuration.Application.CustomerEntities.Commands.Create.CustomerEntityResponse
  Decision.Configuration.Application.CustomerEntities.Commands.Create.CreateCustomerEntityCommand:
    type: object
    properties:
      id:
        format: int32
        type: integer
        x-nullable: true
        description: "id da Entidade | Obrigatório"
      name:
        type: string
        description: "Nome da Entidade | Obrigatório"
  Decision.Configuration.Application.CustomerEntities.Commands.Create.CustomerEntityResponse:
    type: object
    properties:
      id:
        format: int32
        type: integer
        description: "id da Entidade | Obrigatório"
      name:
        type: string
        description: "Nome da Entidade | Obrigatório"
  Decision.Configuration.Application.Features.Commands.Create.CreateFeatureCommand:
    type: object
    required:
      - name
      - description
      - sqlConnectionId
      - dependencies
      - sqlCode
      - userInformation
    properties:
      name:
        type: string
        description: "Nome da Feature | Obrigatório"
      creationUserId:
        type: string
        description: "Usuário que criou a Feature | Obrigatório"
      caosName:
        type: string
        description: "Nome do Caos da Feature"
      tags:
        type: string
        description: "Tags da Feature"
      description:
        type: string
        description: "Descrição da Feature | Obrigatório"
      sqlConnectionId:
        format: uuid
        type: string
        description: "Id da Conexão da Sql da Feature | Obrigatório"
      dependencies:
        type: array
        description: "Dependências da Feature | Obrigatório"
        items:
          $ref: >-
            #/definitions/Decision.Configuration.Application.Features.Commands.Create.CreateFeatureDependencyCommand
      sqlCode:
        type: string
        description: "Código Sql da Feature | Obrigatório"
      schemaName:
        type: string
        description: "Schema da Feature"
      timeout:
        format: int32
        type: integer
        description: "Timeout da Feature"
      userInformation:
        description: "Dados do usuário | Obrigatório"
        $ref: '#/definitions/Decision.Configuration.Application.Users.UserInformation'
  Decision.Configuration.Application.Features.Commands.Create.CreateFeatureDependencyCommand:
    type: object
    required:
      - source
      - outputId
      - alias
    properties:
      source:
        $ref: >-
          #/definitions/Decision.Configuration.Application.Features.DependencyType
      outputId:
        format: uuid
        type: string
        description: "Id da dependência (no caso de Feature é o Id obtido a partir do lookup de /api/v1/Features/Version/featureVersionId/Variable/Lookup) | Obrigatório"
      alias:
        type: string
        description: "Alias da dependência | Obrigatório"
  Decision.Configuration.Application.Features.DependencyType:
    format: int32
    enum:
      - 0
      - 1
    description: "0 - Field | 1 - Feature | Obrigatório"
    type: integer
  Decision.Configuration.Application.Features.Queries.GetbyId.GetByIdFeatureQueryResponse:
    type: object
    properties:
      id:
        format: uuid
        type: string
        description: "Id da Feature | Obrigatório"
      versionId:
        format: uuid
        type: string
        description: "Id da versão da Feature | Obrigatório"
      key:
        type: string
        description: "Key da Feature"
      name:
        type: string
        description: "Nome da Feature | Obrigatório"
      Description:
        type: string
        description: "Descrição da Feature | Obrigatório"
      caosName:
        type: string
        description: "Caos da Feature"
      tags:
        type: string
        description: "Tags da Feature"
      creationUserId:
        type: string
        description: "Usuário que criou a Feature | Obrigatório"
      lastUpdateUserId:
        type: string
        description: "Último usuário a Editar a Feature | Obrigatório"
      createdDateUtc:
        format: date-time
        type: string
        description: "Data de criação da Feature | Obrigatório"
      lastUpdatedDateUtc:
        format: date-time
        type: string
        description: "Data edição da Feature | Obrigatório"
      sqlCode:
        type: string
        description: "Código Sql da Feature | Obrigatório"
      sqlConnectionId:
        format: uuid
        description: "Id da conexão Sql da Feature | Obrigatório"
        type: string
      sqlConnectionName:
        type: string
        description: "Nome da conexão Sql da Feature | Obrigatório"
      deprecated:
        type: boolean
        description: "Indica que a Feature esta depreciada | Obrigatório"
      status:
        type: string
        description: "Status da Feature (Rascunho, Publicado ou Depreciada)  | Obrigatório"
      version:
        type: string
        description: "Versão da Feature (seguindo padrão SemVer) | Obrigatório"
      dependencies:
        type: array
        items:
          $ref: '#/definitions/Decision.Configuration.Application.Features.Responses.DependenciesResponse'
      schemaName:
        type: string
        description: "Schema da Feature"
      timeout:
        format: int32
        type: integer
        description: "Timeout da Feature"
  Decision.Configuration.Application.Features.Responses.DependenciesResponse:
    type: object
    properties:
      source:
        $ref: >-
          #/definitions/Decision.Configuration.Application.Features.DependencyType
      outputId:
        format: uuid
        type: string
        description: "Id da Dependência | Obrigatório"
      alias:
        type: string
        description: "Alias da Dependência | Obrigatório"
      name:
        type: string
        description: "Nome da Dependência | Obrigatório"
      version:
        type: string
        description: "Versão da Dependência | Obrigatório"
      type:
        type: string
        description: "Tipo do dado da dependência (String, Int32, Boolean, Double, DateTime)"
      description:
        type: string
        description: "Descrição da Dependência"
      tags:
        type: string
        description: "Tags da Dependência (Somente Feature)"
      variable:
        type: string
        description: "Variável da Dependência (Somente Feature)"
  Decision.Configuration.Application.Features.Commands.Update.UpdateFeatureCommand:
    type: object
    required:
      - id
      - name
      - description
      - sqlConnectionId
      - dependencies
      - sqlCode
      - userInformation
    properties:
      id:
        format: uuid
        type: string
        description: "Id da Feature | Obrigatório"
      key:
        type: string
        description: "Key da Feature"
      name:
        type: string
        description: "Nome da Feature | Obrigatório"
      tags:
        type: string
        description: "Tags da Feature | Obrigatório"
      caosName:
        type: string
        description: "Caos da Feature"
      timeout:
        format: int32
        type: integer
        description: "Timeout da Feature"
      sqlCode:
        type: string
        description: "Código Sql da Feature | Obrigatório"
      sqlConnectionId:
        format: uuid
        type: string
        description: "Id da conexão Sql da Feature | Obrigatório"
      schemaName:
        type: string
        description: "Schema da Feature"
      description:
        type: string
        description: "Descrição da Feature | Obrigatório"
      userInformation:
        description: "Dados do usuário | Obrigatório"
        $ref: '#/definitions/Decision.Configuration.Application.Users.UserInformation'
      dependencies:
        type: array
        description: "Dependências da Feature | Obrigatório"
        items:
          $ref: >-
            #/definitions/Decision.Configuration.Application.Features.Commands.Update.UpdateFeatureDependencyCommand
  Decision.Configuration.Application.Features.Commands.Update.UpdateFeatureDependencyCommand:
    type: object
    required:
      - source
      - outputId
      - alias
    properties:
      source:
        $ref: >-
          #/definitions/Decision.Configuration.Application.Features.DependencyType
      outputId:
        format: uuid
        type: string
        description: "Id da dependência (no caso de Feature é o Id obtido a partir do lookup de /api/v1/Features/Version/featureVersionId/Variable/Lookup) | Obrigatório"
      alias:
        type: string
        description: "Alias da dependência | Obrigatório"          
  Decision.Configuration.Application.Features.Queries.GetFeaturePreviewById.GetFeaturePreviewByIdQueryResponse:
    type: object
    properties:
      id:
        format: uuid
        type: string
        description: "Id da Feature | Obrigatório"
      name:
        type: string
        description: "Nome da Feature | Obrigatório"
      version:
        type: string
        description: "Versão da Feature | Obrigatório"
      lastUpdateUserId:
        type: string
        description: "Último usuário a editar a Feature | Obrigatório"
      lastUpdatedDateUtc:
        format: date-time
        type: string
        description: "Data da última edição da Feature | Obrigatório"
      sqlConnection:
        type: string
        description: "Conexão Sql da Feature | Obrigatório"
      description:
        type: string
        description: "Descrição da Feature | Obrigatório"
  Decision.Configuration.Application.Features.Queries.GetFeaturesLookup.GetFeaturesLookupQueryResponse:
    type: object
    properties:
      id:
        format: uuid
        type: string
        description: "Id da Feature | Obrigatório"
      name:
        type: string
        description: "Nome da Feature | Obrigatório"
      description:
        type: string
  Decision.Configuration.Application.Features.Queries.GetFeatureVersionLookupByFeature.GetFeatureVersionLookupByFeatureQueryResponse:
    type: object
    properties:
      id:
        format: uuid
        type: string
        description: "Id da versão da Feature | Obrigatório"
      version:
        type: string
        description: "Versão da Feature | Obrigatório"
  Decision.Configuration.Application.Features.Queries.GetFeatureVersionVariableByFeatureId.GetFeatureVersionVariableLookupByFeatureVersionQueryResponse:
    type: object
    properties:
      id:
        format: uuid
        type: string
        description: "Id da variável da Feature | Obrigatório"
      name:
        type: string
        description: "Nome da variável da Feature | Obrigatório"
  Decision.Configuration.Application.Sql.Queries.GetSqlConnectionLookup.GetSqlConnectionLookupQueryResponse:
    type: object
    properties:
      id:
        format: uuid
        type: string
        description: "Id da conexão Sql | Obrigatório"
      name:
        type: string
        description: "Nome da conexão Sql | Obrigatório"
  Decision.Configuration.Application.Fields.Queries.GetFieldsLookup.FieldsLookupResponse:
    type: object
    properties:
      id:
        type: string
        description: "Identificador do Field"
        format: uuid 
      name:
        type: string
        description: "Nome do Field"
      description:
        type: string
        description: "Descrição do Field"          
  Decision.Configuration.Application.Orchestrator.Commands.GetOrchestratorWithEntities:    
     type: object
     properties:
        id:
          type: string
          description: "Identificador do Orquestrator | Obrigatório"
          format: uuid
        name:
          type: string
          description: "Nome do Orquestrator | Obrigatório"
        Entities:
          type: array
          items:
            $ref: >-
              #/definitions/Decision.Configuration.Application.Entities.Commands.GetOrchestratorWithEntities
  Decision.Configuration.Application.Entities.Commands.GetOrchestratorWithEntities: 
      type: object
      properties:
        EntityId:
          type: string
          description: "Identificador da Entidade"
          format: uuid
        name:
          type: string
          description: "Nome da Entidade"
  Decision.Configuration.Application.StatisticalModels.Commands.Create.CreateStatisticalModelCommand:
    type: object
    required:
      - name
      - description
      - dependencies
      - userId
    properties:
      name:
        type: string
        description: "Nome do Modelo | Obrigatório"
      description:
        type: string
        description: "Descrição do Modelo | Obrigatório"
      tags:
        type: string
        description: "Tags do Modelo"
      dependencies:
        type: array
        items:
          $ref: >-
            #/definitions/Decision.Configuration.Application.StatisticalModels.Commands.Create.CreateStatisticalModelDependencyCommand
      endpoint:
        type: string
        description: "Primeiro endpoint do Modelo"
      secondaryendpoint:
        type: string
        description: "Segundo endpoint do Modelo"
      primaryauthenticationkey:
        type: string
        description: "Primeira chave autenticação do Modelo"
      secondaryauthenticationkey:
        type: string
        description: "Segunda chave autenticação do Modelo"
      userId:
        type: string
  Decision.Configuration.Application.StatisticalModels.Commands.Create.CreateStatisticalModelDependencyCommand:
    type: object
    required:
      - source
      - outputId
      - alias
    properties:
      source:
        $ref: >-
          #/definitions/Decision.Configuration.Application.StatisticalModels.DependencyType
      outputId:
        format: uuid
        type: string
        description: "Id da dependência do Modelo | Obrigatório"
      alias:
        type: string
        description: "Alias da dependência do Modelo | Obrigatório"
  Decision.Configuration.Application.StatisticalModels.DependencyType:
    format: int32
    enum:
      - 0
      - 1
      - 2
    description: "0 - Field | 1 - Feature | 2 - Modelo | Obrigatório"
    type: integer
  Decision.Configuration.Application.Users.UserInformation:
    type: object
    properties:
      id:
        type: string
        description: "Id do usuário | Obrigatório"
      email:
        type: string
        description: "E-mail do usuário | Obrigatório"
  Decision.Configuration.Domain.Tests.SubjectType:
    format: int32
    enum:
      - 1
      - 2
      - 3
      - 4
      - 5
    type: integer
  Microsoft.AspNetCore.Mvc.ProblemDetails:
    type: object
    properties:
      type:
        type: string
      title:
        type: string
      status:
        format: int32
        type: integer
      detail:
        type: string
      instance:
        type: string
    additionalProperties: {}